import java.util.HashMap;

import com.justep.system.data.DatabaseProduct;
import com.justep.system.data.Table;
import com.justep.system.data.SQL;

public class MultiDatasetReportProcedure {

	/**
	 * 主从报表
	 * @return
	 */
	public static Table masterDetailQuery1(){
		
		String oracle = "SELECT RORDERID , RSHIPNAME ,(SELECT RCONTACTNAME FROM DEMO_REPORTCUSTOMERS WHERE DEMO_REPORTCUSTOMERS.RCUSTOMERID = DEMO_REPORTORDERS.RCUSTOMERID) AS RCONTACTNAME , (SELECT RLASTNAME || RFIRSTNAME AS RNAME FROM DEMO_REPORTEMPLOYEES WHERE DEMO_REPORTEMPLOYEES.REMPLOYEEID = DEMO_REPORTORDERS.REMPLOYEEID)AS RNAME , TO_CHAR(RORDERDATE, 'yyyy-mm-dd') AS RORDERDATE, TO_CHAR(RREQUIREDDATE, 'yyyy-mm-dd') AS RREQUIREDDATE, TO_CHAR(RSHIPPEDDATE, 'yyyy-mm-dd') AS RSHIPPEDDATE ,RSHIPCOUNTRY ,RSHIPCITY ,RSHIPPOSTALCODE FROM DEMO_REPORTORDERS WHERE RORDERID IN ('10590','10591','10592')";
		String mssql = "SELECT RORDERID , RSHIPNAME ,(SELECT RCONTACTNAME FROM DEMO_REPORTCUSTOMERS WHERE DEMO_REPORTCUSTOMERS.RCUSTOMERID = DEMO_REPORTORDERS.RCUSTOMERID) AS RCONTACTNAME , (SELECT RLASTNAME + RFIRSTNAME AS RNAME FROM DEMO_REPORTEMPLOYEES WHERE DEMO_REPORTEMPLOYEES.REMPLOYEEID = DEMO_REPORTORDERS.REMPLOYEEID)AS RNAME , CONVERT(varchar(100), RORDERDATE, 23) AS RORDERDATE ,CONVERT(varchar(100), RREQUIREDDATE, 23) AS RREQUIREDDATE , CONVERT(varchar(100), RSHIPPEDDATE, 23) AS RSHIPPEDDATE ,RSHIPCOUNTRY ,RSHIPCITY ,RSHIPPOSTALCODE FROM DEMO_REPORTORDERS WHERE RORDERID='10590' OR RORDERID='10591' OR RORDERID='10592'";
		String mysql = "SELECT RORDERID , RSHIPNAME ,(SELECT RCONTACTNAME FROM DEMO_REPORTCUSTOMERS WHERE DEMO_REPORTCUSTOMERS.RCUSTOMERID = DEMO_REPORTORDERS.RCUSTOMERID) AS RCONTACTNAME , (SELECT concat_ws('',RLASTNAME, RFIRSTNAME) AS RNAME FROM DEMO_REPORTEMPLOYEES WHERE DEMO_REPORTEMPLOYEES.REMPLOYEEID = DEMO_REPORTORDERS.REMPLOYEEID)AS RNAME , DATE_FORMAT(RORDERDATE, '%Y-%m-%d') AS RORDERDATE ,DATE_FORMAT(RREQUIREDDATE, '%Y-%m-%d') AS RREQUIREDDATE , DATE_FORMAT(RSHIPPEDDATE, '%Y-%m-%d') AS RSHIPPEDDATE ,RSHIPCOUNTRY ,RSHIPCITY ,RSHIPPOSTALCODE FROM DEMO_REPORTORDERS WHERE RORDERID='10590' OR RORDERID='10591' OR RORDERID='10592'";
		
		HashMap<String,String> sqlMap = new HashMap<String,String>();
		sqlMap.put(SQL.DEFAULT_DB_NAME,mssql);
		sqlMap.put(DatabaseProduct.ORACLE.name(),oracle);
		sqlMap.put(DatabaseProduct.MSSQL.name(),mssql);
		sqlMap.put(DatabaseProduct.KINGBASE.name(),oracle);
		sqlMap.put(DatabaseProduct.SYBASE.name(),mssql);
		sqlMap.put(DatabaseProduct.MYSQL.name(),mysql);
		sqlMap.put(DatabaseProduct.DB2.name(),oracle);
		return SQL.select(sqlMap,null,"/demo/report/data");
	}

	public static Table masterDetailQuery2(){
		
		String oracle = "SELECT RORDERID , RUNITPRICE ,RQUANTITY ,RDISCOUNT , (SELECT RPRODUCTNAME FROM DEMO_REPORTPRODUCTS WHERE DEMO_REPORTPRODUCTS.RPRODUCTID = DEMO_REPORTORDERDETAILS.RPRODUCTID) AS RPRODUCTNAME FROM DEMO_REPORTORDERDETAILS";
		String mssql = "SELECT RORDERID , RUNITPRICE ,RQUANTITY ,RDISCOUNT , (SELECT RPRODUCTNAME FROM DEMO_REPORTPRODUCTS WHERE DEMO_REPORTPRODUCTS.RPRODUCTID = DEMO_REPORTORDERDETAILS.RPRODUCTID) AS RPRODUCTNAME FROM DEMO_REPORTORDERDETAILS";
		
		HashMap<String,String> sqlMap = new HashMap<String,String>();
		sqlMap.put(SQL.DEFAULT_DB_NAME,mssql);
		sqlMap.put(DatabaseProduct.ORACLE.name(),oracle);
		sqlMap.put(DatabaseProduct.MSSQL.name(),mssql);
		sqlMap.put(DatabaseProduct.KINGBASE.name(),oracle);
		sqlMap.put(DatabaseProduct.SYBASE.name(),mssql);
		sqlMap.put(DatabaseProduct.DB2.name(),oracle);
		return SQL.select(sqlMap,null,"/demo/report/data");
	}

	/**
	 * 多源交叉报表
	 * @return
	 */	
	public static Table multiDatasetCrossQuery1(){
		
		String oracle = "SELECT RPRODUCTNAME, RSUPPLIERID , RUNITPRICE , RUNITSINSTOCK FROM DEMO_REPORTPRODUCTS WHERE RCATEGORYID IN ('1','2')";
		String mssql = "SELECT RPRODUCTNAME, RSUPPLIERID , RUNITPRICE , RUNITSINSTOCK FROM DEMO_REPORTPRODUCTS WHERE RCATEGORYID = '1' OR RCATEGORYID = '2'";
		
		HashMap<String,String> sqlMap = new HashMap<String,String>();
		sqlMap.put(SQL.DEFAULT_DB_NAME,mssql);
		sqlMap.put(DatabaseProduct.ORACLE.name(),oracle);
		sqlMap.put(DatabaseProduct.MSSQL.name(),mssql);
		sqlMap.put(DatabaseProduct.KINGBASE.name(),oracle);
		sqlMap.put(DatabaseProduct.SYBASE.name(),mssql);
		sqlMap.put(DatabaseProduct.DB2.name(),oracle);
		return SQL.select(sqlMap,null,"/demo/report/data");
	}

	public static Table multiDatasetCrossQuery2(){
		
		String oracle = "SELECT RSUPPLIERID ,RCOMPANYNAME FROM DEMO_REPORTSUPPLIERS WHERE RSUPPLIERID IN ('1','2','3','7')";
		String mssql = "SELECT RSUPPLIERID ,RCOMPANYNAME FROM DEMO_REPORTSUPPLIERS WHERE RSUPPLIERID = '1' OR RSUPPLIERID = '2' OR RSUPPLIERID = '3' OR RSUPPLIERID = '7'";
		
		HashMap<String,String> sqlMap = new HashMap<String,String>();
		sqlMap.put(SQL.DEFAULT_DB_NAME,mssql);
		sqlMap.put(DatabaseProduct.ORACLE.name(),oracle);
		sqlMap.put(DatabaseProduct.MSSQL.name(),mssql);
		sqlMap.put(DatabaseProduct.KINGBASE.name(),oracle);
		sqlMap.put(DatabaseProduct.SYBASE.name(),mssql);
		sqlMap.put(DatabaseProduct.DB2.name(),oracle);
		return SQL.select(sqlMap,null,"/demo/report/data");
	}
	
	/**
	 * 多源双向分片报表
	 * @return
	 */	
	public static Table multiDatasetHVQuery1(){
		
		String oracle = "SELECT CUSTOMERS.RREGION ,CUSTOMERS.RCITY, DETAILS.RUNITPRICE,DETAILS.RQUANTITY,DETAILS.RDISCOUNT,DETAILS.RPRODUCTID,ORDERS.REMPLOYEEID, ORDERS.RORDERDATE,to_char(ORDERS.RORDERDATE,'yyyy') AS RORDERDATE_YEAR ,to_char(ORDERS.RORDERDATE,'mm') AS RORDERDATE_MOUNTH from DEMO_REPORTORDERS ORDERS,DEMO_REPORTORDERDETAILS DETAILS,DEMO_REPORTCUSTOMERS CUSTOMERS where CUSTOMERS.RCUSTOMERID=ORDERS.RCUSTOMERID AND ORDERS.RORDERID=DETAILS.RORDERID AND (RREGION = '华北' OR RREGION = '西南') AND to_char(ORDERS.RORDERDATE,'yyyy') != '1996' ORDER BY ORDERS.RORDERDATE ASC";
		String mssql = "SELECT CUSTOMERS.RREGION ,CUSTOMERS.RCITY, DETAILS.RUNITPRICE,DETAILS.RQUANTITY,DETAILS.RDISCOUNT,DETAILS.RPRODUCTID,ORDERS.REMPLOYEEID, ORDERS.RORDERDATE,YEAR(ORDERS.RORDERDATE) AS RORDERDATE_YEAR ,MONTH(ORDERS.RORDERDATE) AS RORDERDATE_MOUNTH from DEMO_REPORTORDERS ORDERS,DEMO_REPORTORDERDETAILS DETAILS,DEMO_REPORTCUSTOMERS CUSTOMERS where CUSTOMERS.RCUSTOMERID=ORDERS.RCUSTOMERID AND ORDERS.RORDERID=DETAILS.RORDERID AND (RREGION = '华北' OR RREGION = '西南') ORDER BY ORDERS.RORDERDATE ASC";
		
		HashMap<String,String> sqlMap = new HashMap<String,String>();
		sqlMap.put(SQL.DEFAULT_DB_NAME,mssql);
		sqlMap.put(DatabaseProduct.ORACLE.name(),oracle);
		sqlMap.put(DatabaseProduct.MSSQL.name(),mssql);
		sqlMap.put(DatabaseProduct.KINGBASE.name(),oracle);
		sqlMap.put(DatabaseProduct.SYBASE.name(),mssql);
		sqlMap.put(DatabaseProduct.DB2.name(),oracle);
		return SQL.select(sqlMap,null,"/demo/report/data");
	}

	public static Table multiDatasetHVQuery2(){
		
		String oracle = "SELECT EMPLOYEES.REMPLOYEEID,DETAILS.RPRODUCTID,EMPLOYEES.RTITLE,EMPLOYEES.RFIRSTNAME, EMPLOYEES.RLASTNAME  ,(EMPLOYEES.RLASTNAME || EMPLOYEES.RFIRSTNAME) AS RFULLNAME FROM DEMO_REPORTEMPLOYEES EMPLOYEES,DEMO_REPORTORDERDETAILS DETAILS,DEMO_REPORTORDERS ORDERS WHERE EMPLOYEES.REMPLOYEEID=ORDERS.REMPLOYEEID AND ORDERS.RORDERID=DETAILS.RORDERID";
		String mssql = "SELECT EMPLOYEES.REMPLOYEEID,DETAILS.RPRODUCTID,EMPLOYEES.RTITLE,EMPLOYEES.RFIRSTNAME, EMPLOYEES.RLASTNAME  ,(EMPLOYEES.RLASTNAME + EMPLOYEES.RFIRSTNAME) AS RFULLNAME FROM DEMO_REPORTEMPLOYEES EMPLOYEES,DEMO_REPORTORDERDETAILS DETAILS,DEMO_REPORTORDERS ORDERS WHERE EMPLOYEES.REMPLOYEEID=ORDERS.REMPLOYEEID AND ORDERS.RORDERID=DETAILS.RORDERID";
		
		HashMap<String,String> sqlMap = new HashMap<String,String>();
		sqlMap.put(SQL.DEFAULT_DB_NAME,mssql);
		sqlMap.put(DatabaseProduct.ORACLE.name(),oracle);
		sqlMap.put(DatabaseProduct.MSSQL.name(),mssql);
		sqlMap.put(DatabaseProduct.KINGBASE.name(),oracle);
		sqlMap.put(DatabaseProduct.SYBASE.name(),mssql);
		sqlMap.put(DatabaseProduct.DB2.name(),oracle);
		return SQL.select(sqlMap,null,"/demo/report/data");
	}

	public static Table multiDatasetHVQuery3(){
		
		String oracle = "SELECT CATEGORIES.RCATEGORYID,CATEGORIES.RCATEGORYNAME,PRODUCTS.RPRODUCTID FROM DEMO_REPORTPRODUCTCATEGORY CATEGORIES,DEMO_REPORTPRODUCTS PRODUCTS WHERE CATEGORIES.RCATEGORYID = PRODUCTS.RCATEGORYID AND PRODUCTS.RCATEGORYID IN ('1','2','3','4')";
		String mssql = "SELECT CATEGORIES.RCATEGORYID,CATEGORIES.RCATEGORYNAME,PRODUCTS.RPRODUCTID FROM DEMO_REPORTPRODUCTCATEGORY CATEGORIES,DEMO_REPORTPRODUCTS PRODUCTS WHERE CATEGORIES.RCATEGORYID = PRODUCTS.RCATEGORYID AND (PRODUCTS.RCATEGORYID = '1' OR PRODUCTS.RCATEGORYID = '2' OR PRODUCTS.RCATEGORYID = '3' OR PRODUCTS.RCATEGORYID = '4')";
		
		HashMap<String,String> sqlMap = new HashMap<String,String>();
		sqlMap.put(SQL.DEFAULT_DB_NAME,mssql);
		sqlMap.put(DatabaseProduct.ORACLE.name(),oracle);
		sqlMap.put(DatabaseProduct.MSSQL.name(),mssql);
		sqlMap.put(DatabaseProduct.KINGBASE.name(),oracle);
		sqlMap.put(DatabaseProduct.SYBASE.name(),mssql);
		sqlMap.put(DatabaseProduct.DB2.name(),oracle);
		return SQL.select(sqlMap,null,"/demo/report/data");
	}

	/**
	 * 多源横向分片报表
	 * @return
	 */	
	public static Table mutilDatasetHorizontalQuery(){
		
		String oracle = "SELECT RPRODUCTID , RSUPPLIERID , RPRODUCTNAME , (SELECT RCATEGORYNAME FROM DEMO_REPORTPRODUCTCATEGORY WHERE DEMO_REPORTPRODUCTCATEGORY.RCATEGORYID = DEMO_REPORTPRODUCTS.RCATEGORYID) AS RCATEGORYNAME , (SELECT RCOMPANYNAME FROM DEMO_REPORTSUPPLIERS WHERE DEMO_REPORTSUPPLIERS.RSUPPLIERID = DEMO_REPORTPRODUCTS.RSUPPLIERID)AS RCOMPANYNAME, (SELECT RREGION FROM DEMO_REPORTSUPPLIERS WHERE DEMO_REPORTSUPPLIERS.RSUPPLIERID = DEMO_REPORTPRODUCTS.RSUPPLIERID)AS RREGION, RQUANTITYPERUNIT,RUNITPRICE,RUNITSINSTOCK FROM DEMO_REPORTPRODUCTS WHERE DEMO_REPORTPRODUCTS.RCATEGORYID IN ('1','2') AND DEMO_REPORTPRODUCTS.RSUPPLIERID IN ('1','2','3','7')";
		String mssql = "SELECT RPRODUCTID , RSUPPLIERID , RPRODUCTNAME , (SELECT RCATEGORYNAME FROM DEMO_REPORTPRODUCTCATEGORY WHERE DEMO_REPORTPRODUCTCATEGORY.RCATEGORYID = DEMO_REPORTPRODUCTS.RCATEGORYID) AS RCATEGORYNAME , (SELECT RCOMPANYNAME FROM DEMO_REPORTSUPPLIERS WHERE DEMO_REPORTSUPPLIERS.RSUPPLIERID = DEMO_REPORTPRODUCTS.RSUPPLIERID)AS RCOMPANYNAME, (SELECT RREGION FROM DEMO_REPORTSUPPLIERS WHERE DEMO_REPORTSUPPLIERS.RSUPPLIERID = DEMO_REPORTPRODUCTS.RSUPPLIERID)AS RREGION, RQUANTITYPERUNIT,RUNITPRICE,RUNITSINSTOCK FROM DEMO_REPORTPRODUCTS WHERE (DEMO_REPORTPRODUCTS.RCATEGORYID = '1' or DEMO_REPORTPRODUCTS.RCATEGORYID = '2') AND (DEMO_REPORTPRODUCTS.RSUPPLIERID = '1' OR DEMO_REPORTPRODUCTS.RSUPPLIERID = '2' OR DEMO_REPORTPRODUCTS.RSUPPLIERID = '3' OR DEMO_REPORTPRODUCTS.RSUPPLIERID = '7')";
		
		HashMap<String,String> sqlMap = new HashMap<String,String>();
		sqlMap.put(SQL.DEFAULT_DB_NAME,mssql);
		sqlMap.put(DatabaseProduct.ORACLE.name(),oracle);
		sqlMap.put(DatabaseProduct.MSSQL.name(),mssql);
		sqlMap.put(DatabaseProduct.KINGBASE.name(),oracle);
		sqlMap.put(DatabaseProduct.SYBASE.name(),mssql);
		sqlMap.put(DatabaseProduct.DB2.name(),oracle);
		return SQL.select(sqlMap,null,"/demo/report/data");
	}

	/**
	 * 多源纵向分片报表
	 * @return
	 */		
	public static Table mutilDatasetVerticalQuery(){
		
		String oracle = "SELECT RPRODUCTID , RSUPPLIERID , RPRODUCTNAME ,(SELECT RCATEGORYNAME FROM DEMO_REPORTPRODUCTCATEGORY WHERE DEMO_REPORTPRODUCTCATEGORY.RCATEGORYID = DEMO_REPORTPRODUCTS.RCATEGORYID) AS RCATEGORYNAME , (SELECT RCOMPANYNAME FROM DEMO_REPORTSUPPLIERS WHERE DEMO_REPORTSUPPLIERS.RSUPPLIERID = DEMO_REPORTPRODUCTS.RSUPPLIERID)AS RCOMPANYNAME, (SELECT RREGION FROM DEMO_REPORTSUPPLIERS WHERE DEMO_REPORTSUPPLIERS.RSUPPLIERID = DEMO_REPORTPRODUCTS.RSUPPLIERID)AS RREGION,RQUANTITYPERUNIT,RUNITPRICE,RUNITSINSTOCK FROM DEMO_REPORTPRODUCTS WHERE DEMO_REPORTPRODUCTS.RCATEGORYID IN ('1','2') AND DEMO_REPORTPRODUCTS.RSUPPLIERID IN ('1','2','3','7')";
		String mssql = "SELECT RPRODUCTID , RSUPPLIERID , RPRODUCTNAME ,(SELECT RCATEGORYNAME FROM DEMO_REPORTPRODUCTCATEGORY WHERE DEMO_REPORTPRODUCTCATEGORY.RCATEGORYID = DEMO_REPORTPRODUCTS.RCATEGORYID) AS RCATEGORYNAME , (SELECT RCOMPANYNAME FROM DEMO_REPORTSUPPLIERS WHERE DEMO_REPORTSUPPLIERS.RSUPPLIERID = DEMO_REPORTPRODUCTS.RSUPPLIERID)AS RCOMPANYNAME, (SELECT RREGION FROM DEMO_REPORTSUPPLIERS WHERE DEMO_REPORTSUPPLIERS.RSUPPLIERID = DEMO_REPORTPRODUCTS.RSUPPLIERID)AS RREGION,RQUANTITYPERUNIT,RUNITPRICE,RUNITSINSTOCK FROM DEMO_REPORTPRODUCTS WHERE (DEMO_REPORTPRODUCTS.RCATEGORYID = '1' or DEMO_REPORTPRODUCTS.RCATEGORYID = '2') AND (DEMO_REPORTPRODUCTS.RSUPPLIERID = '1' OR DEMO_REPORTPRODUCTS.RSUPPLIERID = '2' OR DEMO_REPORTPRODUCTS.RSUPPLIERID = '3' OR DEMO_REPORTPRODUCTS.RSUPPLIERID = '7')";
		
		HashMap<String,String> sqlMap = new HashMap<String,String>();
		sqlMap.put(SQL.DEFAULT_DB_NAME,mssql);
		sqlMap.put(DatabaseProduct.ORACLE.name(),oracle);
		sqlMap.put(DatabaseProduct.MSSQL.name(),mssql);
		sqlMap.put(DatabaseProduct.KINGBASE.name(),oracle);
		sqlMap.put(DatabaseProduct.SYBASE.name(),mssql);
		sqlMap.put(DatabaseProduct.DB2.name(),oracle);
		return SQL.select(sqlMap,null,"/demo/report/data");
	}
	
	/**
	 * 主从从报表(订单)
	 * @return
	 */
	public static Table masterDDQuery1(){
		
		String oracle = "SELECT RORDERID , REMPLOYEEID, RSHIPADDRESS, (SELECT RCONTACTNAME FROM DEMO_REPORTCUSTOMERS WHERE DEMO_REPORTCUSTOMERS.RCUSTOMERID = DEMO_REPORTORDERS.RCUSTOMERID) AS RCONTACTNAME , RSHIPNAME , TO_CHAR(RORDERDATE, 'yyyy-mm-dd') AS RORDERDATE, TO_CHAR(RREQUIREDDATE, 'yyyy-mm-dd') AS RREQUIREDDATE, TO_CHAR(RSHIPPEDDATE, 'yyyy-mm-dd') AS RSHIPPEDDATE ,RSHIPCOUNTRY ,RSHIPCITY ,RSHIPPOSTALCODE FROM DEMO_REPORTORDERS where rorderid='10248' or rorderid='10249' or rorderid='10250'";
		String mssql = "SELECT RORDERID , REMPLOYEEID, RSHIPADDRESS, (SELECT RCONTACTNAME FROM DEMO_REPORTCUSTOMERS WHERE DEMO_REPORTCUSTOMERS.RCUSTOMERID = DEMO_REPORTORDERS.RCUSTOMERID) AS RCONTACTNAME , RSHIPNAME , CONVERT(varchar(100), RORDERDATE, 23) AS RORDERDATE ,CONVERT(varchar(100), RREQUIREDDATE, 23) AS RREQUIREDDATE , CONVERT(varchar(100), RSHIPPEDDATE, 23) AS RSHIPPEDDATE ,RSHIPCOUNTRY ,RSHIPCITY ,RSHIPPOSTALCODE FROM DEMO_REPORTORDERS where rorderid='10248' or rorderid='10249' or rorderid='10250'";
		String mysql = "SELECT RORDERID , REMPLOYEEID, RSHIPADDRESS, (SELECT RCONTACTNAME FROM DEMO_REPORTCUSTOMERS WHERE DEMO_REPORTCUSTOMERS.RCUSTOMERID = DEMO_REPORTORDERS.RCUSTOMERID) AS RCONTACTNAME , RSHIPNAME , DATE_FORMAT(RORDERDATE, '%Y-%m-%d') AS RORDERDATE ,DATE_FORMAT(RREQUIREDDATE, '%Y-%m-%d') AS RREQUIREDDATE , DATE_FORMAT(RSHIPPEDDATE, '%Y-%m-%d') AS RSHIPPEDDATE ,RSHIPCOUNTRY ,RSHIPCITY ,RSHIPPOSTALCODE FROM DEMO_REPORTORDERS where rorderid='10248' or rorderid='10249' or rorderid='10250'";
		
		HashMap<String,String> sqlMap = new HashMap<String,String>();
		sqlMap.put(SQL.DEFAULT_DB_NAME,mssql);
		sqlMap.put(DatabaseProduct.ORACLE.name(),oracle);
		sqlMap.put(DatabaseProduct.MSSQL.name(),mssql);
		sqlMap.put(DatabaseProduct.KINGBASE.name(),oracle);
		sqlMap.put(DatabaseProduct.SYBASE.name(),mssql);
		sqlMap.put(DatabaseProduct.MYSQL.name(),mysql);
		sqlMap.put(DatabaseProduct.DB2.name(),oracle);
		return SQL.select(sqlMap,null,"/demo/report/data");
	}

	/**
	 * 主从从报表(订单详细)
	 * @return
	 */
	public static Table masterDDQuery2(){
		
		String oracle = "select * from demo_reportorderdetails where rorderid='10248' or rorderid='10249' or rorderid='10250'";
		String mssql = "select RORDERID,RUNITPRICE,RQUANTITY,RDISCOUNT from demo_reportorderdetails where rorderid='10248' or rorderid='10249' or rorderid='10250'";
		
		HashMap<String,String> sqlMap = new HashMap<String,String>();
		sqlMap.put(SQL.DEFAULT_DB_NAME,mssql);
		sqlMap.put(DatabaseProduct.ORACLE.name(),oracle);
		sqlMap.put(DatabaseProduct.MSSQL.name(),mssql);
		sqlMap.put(DatabaseProduct.KINGBASE.name(),oracle);
		sqlMap.put(DatabaseProduct.SYBASE.name(),mssql);
		sqlMap.put(DatabaseProduct.DB2.name(),oracle);
		return SQL.select(sqlMap,null,"/demo/report/data");
	}

	/**
	 * 主从从报表(产品)
	 * @return
	 */
	public static Table masterDDQuery3(){
		
		String oracle = "SELECT RPRODUCTID , RPRODUCTNAME , (SELECT RCATEGORYNAME FROM DEMO_REPORTPRODUCTCATEGORY WHERE DEMO_REPORTPRODUCTCATEGORY.RCATEGORYID = DEMO_REPORTPRODUCTS.RCATEGORYID) AS RCATEGORYNAME , (SELECT RCOMPANYNAME FROM DEMO_REPORTSUPPLIERS WHERE DEMO_REPORTSUPPLIERS.RSUPPLIERID = DEMO_REPORTPRODUCTS.RSUPPLIERID)AS RCOMPANYNAME, RQUANTITYPERUNIT,RUNITPRICE,RUNITSINSTOCK FROM DEMO_REPORTPRODUCTS";
		String mssql = "SELECT RPRODUCTID , RPRODUCTNAME , (SELECT RCATEGORYNAME FROM DEMO_REPORTPRODUCTCATEGORY WHERE DEMO_REPORTPRODUCTCATEGORY.RCATEGORYID = DEMO_REPORTPRODUCTS.RCATEGORYID) AS RCATEGORYNAME , (SELECT RCOMPANYNAME FROM DEMO_REPORTSUPPLIERS WHERE DEMO_REPORTSUPPLIERS.RSUPPLIERID = DEMO_REPORTPRODUCTS.RSUPPLIERID)AS RCOMPANYNAME, RQUANTITYPERUNIT,RUNITPRICE,RUNITSINSTOCK FROM DEMO_REPORTPRODUCTS";
		
		HashMap<String,String> sqlMap = new HashMap<String,String>();
		sqlMap.put(SQL.DEFAULT_DB_NAME,mssql);
		sqlMap.put(DatabaseProduct.ORACLE.name(),oracle);
		sqlMap.put(DatabaseProduct.MSSQL.name(),mssql);
		sqlMap.put(DatabaseProduct.KINGBASE.name(),oracle);
		sqlMap.put(DatabaseProduct.SYBASE.name(),mssql);
		sqlMap.put(DatabaseProduct.DB2.name(),oracle);
		return SQL.select(sqlMap,null,"/demo/report/data");
	}

	/**
	 * 主从从报表(雇员)
	 * @return
	 */
	public static Table masterDDQuery4(){
		
		String oracle = "select REMPLOYEEID, RLASTNAME || RFIRSTNAME AS RNAME, RTITLE, TO_CHAR(RBIRTHDATE, 'yyyy-mm-dd') RBIRTHDATE, RHIREDATE, RADDRESS, RCITY, RREGION, RPOSTALCODE, RCOUNTRY, RHOMERPHONE, REXTENSION, RORGID, RDEPTID from demo_reportemployees";
		String mssql = "select REMPLOYEEID, RLASTNAME + RFIRSTNAME AS RNAME, RTITLE, CONVERT(varchar(100), RBIRTHDATE, 23) RBIRTHDATE, RHIREDATE, RADDRESS, RCITY, RREGION, RPOSTALCODE, RCOUNTRY, RHOMERPHONE, REXTENSION, RORGID, RDEPTID from demo_reportemployees";
		String mysql = "select REMPLOYEEID, concat_ws('',RLASTNAME,RFIRSTNAME) AS RNAME, RTITLE, DATE_FORMAT(RBIRTHDATE, '%Y-%m-%d') as RBIRTHDATE, RHIREDATE, RADDRESS, RCITY, RREGION, RPOSTALCODE, RCOUNTRY, RHOMERPHONE, REXTENSION, RORGID, RDEPTID from demo_reportemployees";
		
		HashMap<String,String> sqlMap = new HashMap<String,String>();
		sqlMap.put(SQL.DEFAULT_DB_NAME,mssql);
		sqlMap.put(DatabaseProduct.ORACLE.name(),oracle);
		sqlMap.put(DatabaseProduct.MSSQL.name(),mssql);
		sqlMap.put(DatabaseProduct.KINGBASE.name(),oracle);
		sqlMap.put(DatabaseProduct.SYBASE.name(),mssql);
		sqlMap.put(DatabaseProduct.MYSQL.name(),mysql);
		sqlMap.put(DatabaseProduct.DB2.name(),oracle);
		return SQL.select(sqlMap,null,"/demo/report/data");
	}	
}